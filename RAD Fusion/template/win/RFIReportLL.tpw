#!*****************************************************************************
#!                  Report Extension
#!*****************************************************************************
#EXTENSION(LLReport, 'List and Label Report Extension'),PROCEDURE,REQ(GlobalListLabel),HLP('List & Label Report Extension')
#BOXED('Options')
  #INSERT(%StandardTabs)
#ENDBOXED

#LOCALDATA
LLExportFilesQ      QUEUE,PRE(LLExpf)                 !Report extension
FileName              CSTRING(255)
                    END
#ENDLOCALDATA
#AT(%LocalDataClassData)
  #INSERT(%LLDATA),NOINDENT
  #IF(%InvoiceStyle=%TRUE)
LLInvoiceBreak         LIKE(%BreakField)
  #ENDIF
  #FOR(%LLOtherBreakFields)
    #SET(%LLDeclareLocBreakField,'LLBreak' & %LLOtherBreakField)
%LLDeclareLocBreakField    LIKE(%LLOtherBreakField)
  #ENDFOR
#ENDAT
#AT(%ProcedureRoutines)
  #INSERT(%LLRoutines,''),NOINDENT
  #INSERT(%FieldGen,%RepFiles,%TRUE,%True),NOINDENT
  #INSERT(%Printing,%InvoiceStyle),NOINDENT
  #IF(%LLVersion <> 'Version 6')
    #INSERT(%ExportFunctions),NOINDENT
  #ENDIF
  #INSERT(%SendVarsLL,%False),NOINDENT
  #INSERT(%ManualVariables),NOINDENT
  #INSERT(%Flags)
#ENDAT
#AT( %WindowManagerMethodCodeSection, 'Init', '(),BYTE'),PRIORITY(9500)    #!PRIORITY(7800)
  #DECLARE(%ReturnVals,String)
  #SET(%ReturnVals,'(' & %Params)
  #IF(%RunDirect <> 'Use Variable to Determine Default')
   GlobalRequest = SelectRecord
   IF %RepLayProc%ReturnVals,SELF.LLAction,SELF.LLReportName,SELF.LLReportTitle,SELF.LLReportType,SELF.LLPrinterOptions,SELF.LLOutputFile,SELF.LLOutPutDir) = False
     #EMBED(%LLCancelSelectLayout,'LL Cancel selecting Layout')
     POST(EVENT:CloseWindow)
     RETURN(LEVEL:Fatal)
   ELSE
     SELF.LLReportName = CLIP(SELF.LLReportName)
     #EMBED(%LLAfterSelectLayout,'LL After selecting Layout')
     SELF.LLNameNoPath = SELF.LLReportName
     DO LLInitReport
     IF SELF.LLPrinterOptions = True
       #IF(%LLNonMDI=%False)
       Unlockthread               #<!No Clarion statements after this allowed
       #ENDIF
       SELF.LLResult = LL.PrintOptionsDialog(SELF.LLhJob,SELF.LLHWind,SELF.LLReportTitle)  #<!Call List and Label procedure
       IF SELF.LLResult <> 0
         #EMBED(%LLAfterPrinterOptions,'LL After Displaying printer options')
         SELF.LLResult = LL.PrintEnd(SELF.LLhJob,0)
         LL.CloseJob(SELF.LLhJob)
         POST(EVENT:CloseWindow)
         RETURN(LEVEL:Fatal)
       END
     END
     SELF.LLResult = LL.PrintGetOption(SELF.LLhJob,LLOptionCopiesSupported)
   END
  #ELSE
     LLL_:Ref = %PrimaryValue
     Access:LL_RepLay.TryFetch(LLL_:RefKey)
     SELF.LLReportName = CLIP(LLL_:FileName)
     SELF.LLNameNoPath = CLIP(SELF.LLReportName)
     LLReportTitle = LLL_:Description
     CASE CLIP(LLL_:Type)
     OF 'Label'
       SELF.LLReportType = 1
     OF 'List'
       SELF.LLReportType = 2
     OF 'Card'
       SELF.LLReportType = 3
     END
     SELF.LLAction = %PreviewOpt
     SELF.LLPrinterOptions = %PrinterOpt
     RFIPages = LLL_:Pages
     #EMBED(%LLAfterSelectLayout,'LL After selecting Layout')
     DO LLInitReport
     IF SELF.LLPrinterOptions = True
       SELF.LLResult = LL.PrintOptionsDialog(LLhJob,LLHWind,LLReportTitle)    #<! Call List and Label's own procedure
       IF SELF.LLResult <> 0
         #EMBED(%LLAfterPrinterOptions,'LL After Displaying printer options')
         POST(EVENT:CloseWindow)
         RETURN(LEVEL:Fatal)               #<!Legacy
       END
     END
     SELF.LLResult = LL.PrintGetOption(LLhJob,LLOptionCopiesSupported)
  #ENDIF
#ENDAT
#AT( %WindowManagerMethodCodeSection, 'Init', '(),BYTE'),PRIORITY(8030)
  #IF(%ProgressType <> 'Clarion Progress Bar')
    %Window{PROP:Text} = ''             #<!Set window if not using Clarion progress controls
    %Window{PROP:Height} = 0
    %Window{PROP:Width} = 0
  #ENDIF
#ENDAT
#!==================================================================================================
#AT( %ProcessManagerMethodCodeSection, 'TakeRecord', '(),BYTE'),PRIORITY(5500)
  DO PrintOutToLL
  #EMBED(%LLRefreshProgress,'Before Refreshing Progress Window')
  #IF(%ProgressType <> 'Clarion Progress Bar' and %ProgressType <> 'No Progress Window')
    #IF(%ProgressTextType='Static Text')
  SELF.LLPrintText = '%PrintText'
    #ELSE
  SELF.LLPrintText = %DynamicText
    #ENDIF
  SELF.LLResult = LL.PrintSetBoxText(SELF.LLhJob, SELF.LLPrintText, Progress:Thermometer)
  #ENDIF
  IF SELF.LLResult = LLErrUserAborted 
    SELF.LLAbort = True
    RETURN LEVEL:Fatal
  END
#ENDAT
#AT(%WindowManagerMethodCodeSection,'Run','(),BYTE'),PRIORITY(1000)
  #INSERT(%LLWindowRun)
#ENDAT
#AT(%WindowManagerMethodCodeSection,'Kill','(),BYTE'),PRIORITY(1000)
  #INSERT(%LLKillWindow)
#ENDAT
#AT(%ProcedureRoutines)
  #INSERT(%LLDefineVars),NOINDENT
  #INSERT(%PrintOutToLL),NOINDENT
#ENDAT
